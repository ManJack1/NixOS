// This config is in the KDL format: https://kdl.dev
// "/-" comments out the following node.
// Check the wiki for a full description of the configuration:
// https://yalter.github.io/niri/Configuration:-Introduction
// Required for clipboard history integration
spawn-at-startup "bash" "-c" "wl-paste --watch cliphist store &"
// Recommended (must install polkit-mate before hand) for elevation prompts
spawn-at-startup "/usr/lib/mate-polkit/polkit-mate-authentication-agent-1"
// This may be a different path on different distributions, the above is for the arch linux mate-polkit package
// Starts DankShell
spawn-at-startup "dms" "run"
spawn-at-startup "fcitx5" "-d"
// If using niri newer than 271534e115e5915231c99df287bbfe396185924d (~aug 17 2025)
// you can add this to disable built in config load errors since dank shell provides this
config-notification {
    disable-failed
}
// 笔记本内屏
output "eDP-1" {
    off
}
// 三星显示器（DP-1）- 在笔记本右侧
output "DP-1" {
    mode "2560x1440@75.000"
    scale 1.0
    transform "normal"
    position x=1707 y=0
}
// HDMI 显示器 - 在最右侧
output "HDMI-A-1" {
    mode "2560x1440@75.000"
    scale 1.0
    transform "90"
    position x=4267 y=0
}
prefer-no-csd
// 为非活动窗口设置透明度
window-rule {
    match is-active=false
    opacity 0.95
}
// Input device configuration.
// Find the full list of options on the wiki:
// https://yalter.github.io/niri/Configuration:-Input
input {
    keyboard {
        xkb {
 // You can set rules, model, layout, variant and options.
            // For more information, see xkeyboard-config(7).

            // For example:
            // layout "us,ru"
            // options "grp:win_space_toggle,compose:ralt,ctrl:nocaps"

            // If this section is empty, niri will fetch xkb settings
            // from org.freedesktop.locale1. You can control these using
            // localectl set-x11-keymap.

        }
        // Enable numlock on startup, omitting this setting disables it.
        numlock
    }
    // Next sections include libinput settings.
    // Omitting settings disables them, or leaves them at their default values.
    // All commented-out settings here are examples, not defaults.
    touchpad {
        // off
        tap
        // dwt
        // dwtp
        // drag false
        // drag-lock
        natural-scroll
 // accel-speed 0.2
        // accel-profile "flat"
        // scroll-method "two-finger"
        // disabled-on-external-mouse
    }
    mouse {
 // off
        // natural-scroll
        // accel-speed 0.2
        // accel-profile "flat"
        // scroll-method "no-scroll"

    }
    trackpoint {
 // off
        // natural-scroll
        // accel-speed 0.2
        // accel-profile "flat"
        // scroll-method "on-button-down"
        // scroll-button 273
        // scroll-button-lock
        // middle-emulation

    }
 // Uncomment this to make the mouse warp to the center of newly focused windows.
    // warp-mouse-to-focus

    // Focus windows and outputs automatically when moving the mouse into them.
    // Setting max-scroll-amount="0%" makes it work only on windows already fully on screen.
    // focus-follows-mouse max-scroll-amount="0%"
}
// You can configure outputs by their name, which you can find
// by running `niri msg outputs` while inside a niri instance.
// The built-in laptop monitor is usually called "eDP-1".
// Find more information on the wiki:
// https://yalter.github.io/niri/Configuration:-Outputs
// Remember to uncomment the node by removing "/-"!
/-output "eDP-1" {
// Uncomment this line to disable this output.
// off
// Resolution and, optionally, refresh rate of the output.
// The format is "<width>x<height>" or "<width>x<height>@<refresh rate>".
// If the refresh rate is omitted, niri will pick the highest refresh rate
// for the resolution.
// If the mode is omitted altogether or is invalid, niri will pick one automatically.
// Run `niri msg outputs` while inside a niri instance to list all outputs and their modes.
mode "1920x1080@120.030"
// You can use integer or fractional scale, for example use 1.5 for 150% scale.
scale 2
// Transform allows to rotate the output counter-clockwise, valid values are:
// normal, 90, 180, 270, flipped, flipped-90, flipped-180 and flipped-270.
transform "normal"
// Position of the output in the global coordinate space.
// This affects directional monitor actions like "focus-monitor-left", and cursor movement.
// The cursor can only move between directly adjacent outputs.
// Output scale and rotation has to be taken into account for positioning:
// outputs are sized in logical, or scaled, pixels.
// For example, a 3840×2160 output with scale 2.0 will have a logical size of 1920×1080,
// so to put another output directly adjacent to it on the right, set its x to 1920.
// If the position is unset or results in an overlap, the output is instead placed
// automatically.
position x=1280 y=0
}
// Settings that influence how windows are positioned and sized.
// Find more information on the wiki:
// https://yalter.github.io/niri/Configuration:-Layout
layout {
    // Set gaps 10
    gaps 10
    // When to center a column when changing focus, options are:
    // - "never", default behavior, focusing an off-screen column will keep at the left
    //   or right edge of the screen.
    // - "always", the focused column will always be centered.
    // - "on-overflow", focusing a column will center it if it doesn't fit
    //   together with the previously focused column.
    center-focused-column "never"
    // You can customize the widths that "switch-preset-column-width" (Mod+R) toggles between.
    preset-column-widths {
        // Proportion sets the width as a fraction of the output width, taking gaps 10
        // For example, you can perfectly fit four windows sized "proportion 0.25" on an output.
        // The default preset widths are 1/3, 1/2 and 2/3 of the output.
        proportion 0.33333
        proportion 0.5
        proportion 0.66667
 // Fixed sets the width in logical pixels exactly.
        // fixed 1920
    }
    // You can also customize the heights that "switch-preset-window-height" (Mod+Shift+R) toggles between.
    // preset-window-heights { }
    // You can change the default width of the new windows.
    default-column-width {
        proportion 0.5
    }
    // If you leave the brackets empty, the windows themselves will decide their initial width.
    // default-column-width {}
    // By default focus ring and border are rendered as a solid background rectangle
    // behind windows. That is, they will show up through semitransparent windows.
    // This is because windows using client-side decorations can have an arbitrary shape.
    //
    // If you don't like that, you should uncomment `prefer-no-csd` below.
    // Niri will draw focus ring and border *around* windows that agree to omit their
    // client-side decorations.
    //
    // Alternatively, you can override it with a window rule called
    // `draw-border-with-background`.
    // You can change how the focus ring looks.
    focus-ring {
        // Uncomment this line to disable the focus ring.
        // off
        // How many logical pixels the ring extends out from the windows.
        width 4
        // Colors can be set in a variety of ways:
        // - CSS named colors: "red"
        // - RGB hex: "#rgb", "#rgba", "#rrggbb", "#rrggbbaa"
        // - CSS-like notation: "rgb(255, 127, 0)", rgba(), hsl() and a few others.
        // Color of the ring on the active monitor.
        active-color "#7fc8ff"
        // Color of the ring on inactive monitors.
        //
        // The focus ring only draws around the active window, so the only place
        // where you can see its inactive-color is on other monitors.
        inactive-color "#505050"
 // You can also use gradients. They take precedence over solid colors.
        // Gradients are rendered the same as CSS linear-gradient(angle, from, to).
        // The angle is the same as in linear-gradient, and is optional,
        // defaulting to 180 (top-to-bottom gradient).
        // You can use any CSS linear-gradient tool on the web to set these up.
        // Changing the color space is also supported, check the wiki for more info.
        //
        // active-gradient from="#80c8ff" to="#c7ff7f" angle=45

        // You can also color the gradient relative to the entire view
        // of the workspace, rather than relative to just the window itself.
        // To do that, set relative-to="workspace-view".
        //
        // inactive-gradient from="#505050" to="#808080" angle=45 relative-to="workspace-view"
    }
    // You can also add a border. It's similar to the focus ring, but always visible.
    border {
        // The settings are the same as for the focus ring.
        // If you enable the border, you probably want to disable the focus ring.
        off
        width 4
        active-color "#ffc87f"
        inactive-color "#505050"
        // Color of the border around windows that request your attention.
        urgent-color "#9b0000"
 // Gradients can use a few different interpolation color spaces.
        // For example, this is a pastel rainbow gradient via in="oklch longer hue".
        //
        // active-gradient from="#e5989b" to="#ffb4a2" angle=45 relative-to="workspace-view" in="oklch longer hue"

        // inactive-gradient from="#505050" to="#808080" angle=45 relative-to="workspace-view"
    }
    // You can enable drop shadows for windows.
    shadow {
        // Uncomment the next line to enable shadows.
        // on
        // By default, the shadow draws only around its window, and not behind it.
        // Uncomment this setting to make the shadow draw behind its window.
        //
        // Note that niri has no way of knowing about the CSD window corner
        // radius. It has to assume that windows have square corners, leading to
        // shadow artifacts inside the CSD rounded corners. This setting fixes
        // those artifacts.
        //
        // However, instead you may want to set prefer-no-csd and/or
        // geometry-corner-radius. Then, niri will know the corner radius and
        // draw the shadow correctly, without having to draw it behind the
        // window. These will also remove client-side shadows if the window
        // draws any.
        //
        // draw-behind-window true
        // You can change how shadows look. The values below are in logical
        // pixels and match the CSS box-shadow properties.
        // Softness controls the shadow blur radius.
        softness 30
        // Spread expands the shadow.
        spread 5
        // Offset moves the shadow relative to the window.
        offset x=0 y=5
        // You can also change the shadow color and opacity.
        color "#0007"
    }
    // Struts shrink the area occupied by windows, similarly to layer-shell panels.
    // You can think of them as a kind of outer gaps. They are set in logical pixels.
    // Left and right struts will cause the next window to the side to always be visible.
    // Top and bottom struts will simply add outer gaps in addition to the area occupied by
    // layer-shell panels and regular gaps.
    struts {
 // left 64
        // right 64
        // top 64
        // bottom 64

    }
}
// Add lines like this to spawn processes at startup.
// Note that running niri as a session supports xdg-desktop-autostart,
// which may be more convenient to use.
// See the binds section below for more spawn examples.
// This line starts waybar, a commonly used bar for Wayland compositors.
spawn-at-startup "waybar"
// To run a shell command (with variables, pipes, etc.), use spawn-sh-at-startup:
// spawn-sh-at-startup "qs -c ~/source/qs/MyAwesomeShell"
hotkey-overlay {
 // Uncomment this line to disable the "Important Hotkeys" pop-up at startup.
    // skip-at-startup

}
// Uncomment this line to ask the clients to omit their client-side decorations if possible.
// If the client will specifically ask for CSD, the request will be honored.
// Additionally, clients will be informed that they are tiled, removing some client-side rounded corners.
// This option will also fix border/focus ring drawing behind some semitransparent windows.
// After enabling or disabling this, you need to restart the apps for this to take effect.
// prefer-no-csd
// You can change the path where screenshots are saved.
// A ~ at the front will be expanded to the home directory.
// The path is formatted with strftime(3) to give you the screenshot date and time.
screenshot-path "~/Pictures/Screenshots/Screenshot from %Y-%m-%d %H-%M-%S.png"
// You can also set this to null to disable saving screenshots to disk.
// screenshot-path null
// Animation settings.
// The wiki explains how to configure individual animations:
// https://yalter.github.io/niri/Configuration:-Animations
animations {
 // Uncomment to turn off all animations.
    // off

    // Slow down all animations by this factor. Values below 1 speed them up instead.
    // slowdown 3.0

}
// Window rules let you adjust behavior for individual windows.
// Find more information on the wiki:
// https://yalter.github.io/niri/Configuration:-Window-Rules
// Work around WezTerm's initial configure bug
// by setting an empty default-column-width.
window-rule {
    // This regular expression is intentionally made as specific as possible,
    // since this is the default config, and we want no false positives.
    // You can get away with just app-id="wezterm" if you want.
    match app-id="^org\\.wezfurlong\\.wezterm$"
    default-column-width {

    }
}
// Open the Firefox picture-in-picture player as floating by default.
window-rule {
    // This app-id regular expression will work for both:
    // - host Firefox (app-id is "firefox")
    // - Flatpak Firefox (app-id is "org.mozilla.firefox")
    match app-id="firefox$" title="^Picture-in-Picture$"
    open-floating true
}
// Example: block out two password managers from screen capture.
// (This example rule is commented out with a "/-" in front.)
/-window-rule {
match app-id=r#"^org\.keepassxc\.KeePassXC$"#
match app-id=r#"^org\.gnome\.World\.Secrets$"#
block-out-from "screen-capture"
// Use this instead if you want them visible on third-party screenshot tools.
// block-out-from "screencast"
}
// Example: enable rounded corners for all windows.
// (This example rule is commented out with a "/-" in front.)
/-window-rule {
geometry-corner-radius 0
clip-to-geometry true
}
binds {
    // Mod-Shift-/, which is usually the same as Mod-?,
    // shows a list of important hotkeys.
    Mod+Shift+Slash hotkey-overlay-title="Show Hotkey Overlay" {
        show-hotkey-overlay
    }
    // Application launchers
    Mod+A hotkey-overlay-title="Open Claude.ai" {
        spawn "firefox" "https://claude.ai"
    }
    Mod+Return hotkey-overlay-title="Open Terminal: kitty" {
        spawn "kitty"
    }
    Mod+B hotkey-overlay-title="Open Browser: Firefox" {
        spawn "firefox"
    }
    Mod+Space hotkey-overlay-title="Application Launcher: rofi" {
        spawn "rofi" "-show" "drun"
    }
    Mod+Tab hotkey-overlay-title="Window Switcher: rofi" {
        spawn "rofi" "-show" "window"
    }
    Mod+E hotkey-overlay-title="File Manager: Thunar" {
        spawn "thunar"
    }
    // System controls
    Super+Alt+L hotkey-overlay-title="Lock Screen: swaylock" {
        spawn "swaylock"
    }
    Super+Alt+S allow-when-locked=true hotkey-overlay-title=null {
        spawn-sh "pkill orca || exec orca"
    }
    // Volume controls
    XF86AudioRaiseVolume allow-when-locked=true hotkey-overlay-title="Volume Up" {
        spawn-sh "wpctl set-volume @DEFAULT_AUDIO_SINK@ 0.1+"
    }
    XF86AudioLowerVolume allow-when-locked=true hotkey-overlay-title="Volume Down" {
        spawn-sh "wpctl set-volume @DEFAULT_AUDIO_SINK@ 0.1-"
    }
    XF86AudioMute allow-when-locked=true hotkey-overlay-title="Toggle Mute" {
        spawn-sh "wpctl set-mute @DEFAULT_AUDIO_SINK@ toggle"
    }
    XF86AudioMicMute allow-when-locked=true hotkey-overlay-title="Toggle Mic Mute" {
        spawn-sh "wpctl set-mute @DEFAULT_AUDIO_SOURCE@ toggle"
    }
    // Media playback controls
    XF86AudioPlay allow-when-locked=true hotkey-overlay-title="Play/Pause" {
        spawn-sh "playerctl play-pause"
    }
    XF86AudioNext allow-when-locked=true hotkey-overlay-title="Next Track" {
        spawn-sh "playerctl next"
    }
    XF86AudioPrev allow-when-locked=true hotkey-overlay-title="Previous Track" {
        spawn-sh "playerctl previous"
    }
    XF86AudioStop allow-when-locked=true hotkey-overlay-title="Stop Playback" {
        spawn-sh "playerctl stop"
    }
    // Brightness controls
    XF86MonBrightnessUp allow-when-locked=true hotkey-overlay-title="Brightness Up" {
        spawn "brightnessctl" "--class=backlight" "set" "+10%"
    }
    XF86MonBrightnessDown allow-when-locked=true hotkey-overlay-title="Brightness Down" {
        spawn "brightnessctl" "--class=backlight" "set" "10%-"
    }
    // Window management
    Mod+O repeat=false hotkey-overlay-title="Toggle Overview" {
        toggle-overview
    }
    Mod+Q repeat=false hotkey-overlay-title="Close Window" {
        close-window
    }
    // Focus navigation
    Mod+Left hotkey-overlay-title="Focus Left Column" {
        focus-column-left
    }
    Mod+Down hotkey-overlay-title="Focus Window Down" {
        focus-window-down
    }
    Mod+Up hotkey-overlay-title="Focus Window Up" {
        focus-window-up
    }
    Mod+Right hotkey-overlay-title="Focus Right Column" {
        focus-column-right
    }
    Mod+H hotkey-overlay-title="Focus Left Column" {
        focus-column-left
    }
    Mod+J hotkey-overlay-title="Focus Window Down" {
        focus-window-down
    }
    Mod+K hotkey-overlay-title="Focus Window Up" {
        focus-window-up
    }
    Mod+L hotkey-overlay-title="Focus Right Column" {
        focus-column-right
    }
    // Move windows/columns
    Mod+Shift+Left hotkey-overlay-title="Move Column Left" {
        move-column-left
    }
    Mod+Shift+Down hotkey-overlay-title="Move Window Down" {
        move-window-down
    }
    Mod+Shift+Up hotkey-overlay-title="Move Window Up" {
        move-window-up
    }
    Mod+Shift+Right hotkey-overlay-title="Move Column Right" {
        move-column-right
    }
    Mod+Shift+H hotkey-overlay-title="Move Column Left" {
        move-column-left
    }
    Mod+Shift+J hotkey-overlay-title="Move Window Down" {
        move-window-down
    }
    Mod+Shift+K hotkey-overlay-title="Move Window Up" {
        move-window-up
    }
    Mod+Shift+L hotkey-overlay-title="Move Column Right" {
        move-column-right
    }
    // Column navigation
    Mod+Home hotkey-overlay-title="Focus First Column" {
        focus-column-first
    }
    Mod+End hotkey-overlay-title="Focus Last Column" {
        focus-column-last
    }
    Mod+Ctrl+Home hotkey-overlay-title="Move Column to First" {
        move-column-to-first
    }
    Mod+Ctrl+End hotkey-overlay-title="Move Column to Last" {
        move-column-to-last
    }
    // Monitor navigation
    Mod+semicolon hotkey-overlay-title="Focus Left Monitor" {
        focus-monitor-left
    }
    Mod+apostrophe hotkey-overlay-title="Focus Right Monitor" {
        focus-monitor-right
    }
    // Move to monitor
    Mod+Ctrl+Left hotkey-overlay-title="Move to Left Monitor" {
        move-column-to-monitor-left
    }
    Mod+Ctrl+Down hotkey-overlay-title="Move to Monitor Below" {
        move-column-to-monitor-down
    }
    Mod+Ctrl+Up hotkey-overlay-title="Move to Monitor Above" {
        move-column-to-monitor-up
    }
    Mod+Ctrl+Right hotkey-overlay-title="Move to Right Monitor" {
        move-column-to-monitor-right
    }
    Mod+Ctrl+H hotkey-overlay-title="Move to Left Monitor" {
        move-column-to-monitor-left
    }
    Mod+Ctrl+J hotkey-overlay-title="Move to Monitor Below" {
        move-column-to-monitor-down
    }
    Mod+Ctrl+K hotkey-overlay-title="Move to Monitor Above" {
        move-column-to-monitor-up
    }
    Mod+Ctrl+L hotkey-overlay-title="Move to Right Monitor" {
        move-column-to-monitor-right
    }
    // Workspace navigation
    Mod+Page_Down hotkey-overlay-title="Focus Workspace Down" {
        focus-workspace-down
    }
    Mod+Page_Up hotkey-overlay-title="Focus Workspace Up" {
        focus-workspace-up
    }
    Mod+U hotkey-overlay-title="Focus Workspace Down" {
        focus-workspace-down
    }
    Mod+I hotkey-overlay-title="Focus Workspace Up" {
        focus-workspace-up
    }
    Mod+Ctrl+Page_Down hotkey-overlay-title="Move to Workspace Down" {
        move-column-to-workspace-down
    }
    Mod+Ctrl+Page_Up hotkey-overlay-title="Move to Workspace Up" {
        move-column-to-workspace-up
    }
    Mod+Ctrl+U hotkey-overlay-title="Move to Workspace Down" {
        move-column-to-workspace-down
    }
    Mod+Ctrl+I hotkey-overlay-title="Move to Workspace Up" {
        move-column-to-workspace-up
    }
    // Move workspace
    Mod+Shift+Page_Down hotkey-overlay-title="Move Workspace Down" {
        move-workspace-down
    }
    Mod+Shift+Page_Up hotkey-overlay-title="Move Workspace Up" {
        move-workspace-up
    }
    Mod+Shift+U hotkey-overlay-title="Move Workspace Down" {
        move-workspace-down
    }
    Mod+Shift+I hotkey-overlay-title="Move Workspace Up" {
        move-workspace-up
    }
    // Mouse wheel workspace navigation
    Mod+WheelScrollDown cooldown-ms=150 hotkey-overlay-title="Scroll to Workspace Down" {
        focus-workspace-down
    }
    Mod+WheelScrollUp cooldown-ms=150 hotkey-overlay-title="Scroll to Workspace Up" {
        focus-workspace-up
    }
    Mod+Ctrl+WheelScrollDown cooldown-ms=150 hotkey-overlay-title="Scroll Move to Workspace Down" {
        move-column-to-workspace-down
    }
    Mod+Ctrl+WheelScrollUp cooldown-ms=150 hotkey-overlay-title="Scroll Move to Workspace Up" {
        move-column-to-workspace-up
    }
    // Mouse wheel column navigation
    Mod+WheelScrollRight hotkey-overlay-title="Scroll to Right Column" {
        focus-column-right
    }
    Mod+WheelScrollLeft hotkey-overlay-title="Scroll to Left Column" {
        focus-column-left
    }
    Mod+Ctrl+WheelScrollRight hotkey-overlay-title="Scroll Move Column Right" {
        move-column-right
    }
    Mod+Ctrl+WheelScrollLeft hotkey-overlay-title="Scroll Move Column Left" {
        move-column-left
    }
    Mod+Shift+WheelScrollDown hotkey-overlay-title="Shift+Scroll Right" {
        focus-column-right
    }
    Mod+Shift+WheelScrollUp hotkey-overlay-title="Shift+Scroll Left" {
        focus-column-left
    }
    Mod+Ctrl+Shift+WheelScrollDown hotkey-overlay-title="Shift+Scroll Move Right" {
        move-column-right
    }
    Mod+Ctrl+Shift+WheelScrollUp hotkey-overlay-title="Shift+Scroll Move Left" {
        move-column-left
    }
    // Direct workspace access
    Mod+1 hotkey-overlay-title="Focus Workspace 1" {
        focus-workspace 1
    }
    Mod+2 hotkey-overlay-title="Focus Workspace 2" {
        focus-workspace 2
    }
    Mod+3 hotkey-overlay-title="Focus Workspace 3" {
        focus-workspace 3
    }
    Mod+4 hotkey-overlay-title="Focus Workspace 4" {
        focus-workspace 4
    }
    Mod+5 hotkey-overlay-title="Focus Workspace 5" {
        focus-workspace 5
    }
    Mod+6 hotkey-overlay-title="Focus Workspace 6" {
        focus-workspace 6
    }
    Mod+7 hotkey-overlay-title="Focus Workspace 7" {
        focus-workspace 7
    }
    Mod+8 hotkey-overlay-title="Focus Workspace 8" {
        focus-workspace 8
    }
    Mod+9 hotkey-overlay-title="Focus Workspace 9" {
        focus-workspace 9
    }
    Mod+Shift+1 hotkey-overlay-title="Move to Workspace 1" {
        move-column-to-workspace 1
    }
    Mod+Shift+2 hotkey-overlay-title="Move to Workspace 2" {
        move-column-to-workspace 2
    }
    Mod+Shift+3 hotkey-overlay-title="Move to Workspace 3" {
        move-column-to-workspace 3
    }
    Mod+Shift+4 hotkey-overlay-title="Move to Workspace 4" {
        move-column-to-workspace 4
    }
    Mod+Shift+5 hotkey-overlay-title="Move to Workspace 5" {
        move-column-to-workspace 5
    }
    Mod+Shift+6 hotkey-overlay-title="Move to Workspace 6" {
        move-column-to-workspace 6
    }
    Mod+Shift+7 hotkey-overlay-title="Move to Workspace 7" {
        move-column-to-workspace 7
    }
    Mod+Shift+8 hotkey-overlay-title="Move to Workspace 8" {
        move-column-to-workspace 8
    }
    Mod+Shift+9 hotkey-overlay-title="Move to Workspace 9" {
        move-column-to-workspace 9
    }
    // Column management
    Mod+BracketLeft hotkey-overlay-title="Consume/Expel Window Left" {
        consume-or-expel-window-left
    }
    Mod+BracketRight hotkey-overlay-title="Consume/Expel Window Right" {
        consume-or-expel-window-right
    }
    Mod+Comma hotkey-overlay-title="Consume Window Into Column" {
        consume-window-into-column
    }
    Mod+Period hotkey-overlay-title="Expel Window From Column" {
        expel-window-from-column
    }
    // Window sizing
    Mod+R hotkey-overlay-title="Switch Preset Column Width" {
        switch-preset-column-width
    }
    Mod+Shift+R hotkey-overlay-title="Switch Preset Window Height" {
        switch-preset-window-height
    }
    Mod+Ctrl+R hotkey-overlay-title="Reset Window Height" {
        reset-window-height
    }
    Mod+F hotkey-overlay-title="Maximize Column" {
        maximize-column
    }
    Mod+M hotkey-overlay-title="Fullscreen Window" {
        fullscreen-window
    }
    Mod+Ctrl+F hotkey-overlay-title="Expand Column to Available Width" {
        expand-column-to-available-width
    }
    // Column centering
    Mod+C hotkey-overlay-title="Center Column" {
        center-column
    }
    Mod+Ctrl+C hotkey-overlay-title="Center Visible Columns" {
        center-visible-columns
    }
    // Fine adjustments
    Mod+Alt+h hotkey-overlay-title="Decrease Column Width 10%" {
        set-column-width "-10%"
    }
    Mod+Alt+l hotkey-overlay-title="Increase Column Width 10%" {
        set-column-width "+10%"
    }
    Mod+Alt+j hotkey-overlay-title="Decrease Window Height 10%" {
        set-window-height "-10%"
    }
    Mod+Alt+k hotkey-overlay-title="Increase Window Height 10%" {
        set-window-height "+10%"
    }
    // Floating/Tiling
    Mod+V hotkey-overlay-title="Toggle Window Floating" {
        toggle-window-floating
    }
    Mod+Shift+V hotkey-overlay-title="Switch Focus: Floating/Tiling" {
        switch-focus-between-floating-and-tiling
    }
    // Tabbed display
    Mod+W hotkey-overlay-title="Toggle Column Tabbed Display" {
        toggle-column-tabbed-display
    }
    // Screenshots using grim + slurp (save to file)
    Mod+Shift+X hotkey-overlay-title="Screenshot: Select Area" {
        spawn-sh "grim -g \"$(slurp)\" ~/Pictures/Screenshots/Screenshot-$(date +%Y-%m-%d-%H-%M-%S).png"
    }
    Mod+Shift+C hotkey-overlay-title="Screenshot: Entire Screen" {
        spawn-sh "grim ~/Pictures/Screenshots/Screenshot-$(date +%Y-%m-%d-%H-%M-%S).png"
    }
    Mod+Shift+W hotkey-overlay-title="Screenshot: Current Window" {
        spawn-sh "grim -g \"$(swaymsg -t get_tree | jq -r '.. | select(.focused?) | .rect | \"\\(.x),\\(.y) \\(.width)x\\(.height)\"')\" ~/Pictures/Screenshots/Screenshot-$(date +%Y-%m-%d-%H-%M-%S).png"
    }
    // Screenshots using grim + slurp (to clipboard)
    Mod+Shift+A hotkey-overlay-title="Screenshot to Clipboard: Select Area" {
        spawn-sh "grim -g \"$(slurp)\" - | wl-copy"
    }
    Mod+Shift+S hotkey-overlay-title="Screenshot to Clipboard: Entire Screen" {
        spawn-sh "grim - | wl-copy"
    }
    Mod+Shift+Z hotkey-overlay-title="Screenshot to Clipboard: Current Window" {
        spawn-sh "grim -g \"$(swaymsg -t get_tree | jq -r '.. | select(.focused?) | .rect | \"\\(.x),\\(.y) \\(.width)x\\(.height)\"')\" - | wl-copy"
    }
    // System control
    Mod+Escape allow-inhibiting=false hotkey-overlay-title="Toggle Keyboard Shortcuts Inhibit" {
        toggle-keyboard-shortcuts-inhibit
    }
    Mod+Shift+E hotkey-overlay-title="Quit niri" {
        quit
    }
    Ctrl+Alt+Delete hotkey-overlay-title="Quit niri" {
        quit
    }
    Mod+Shift+P hotkey-overlay-title="Power Off Monitors" {
        power-off-monitors
    }
}

